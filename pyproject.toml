[project]
name = "aimcp"
version = "0.2.0"
description = "MCP server for distributing AI rules from GitLab repositories to IDEs"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "fastmcp>=2.0.0",
    "httpx>=0.27.0",
    "typer>=0.12.0",
    "pydantic>=2.8.0",
    "pydantic-settings>=2.4.0",
    "structlog>=24.1.0",
    "pyyaml>=6.0.0",
]

[project.scripts]
aimcp = "aimcp.__main__:main"

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=5.0.0",
    "ruff>=0.5.0",
    "mypy>=1.11.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/aimcp"]

[tool.ruff]
line-length = 88
target-version = "py313"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.mypy]
python_version = "3.13"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = ["fastmcp.*"]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src/aimcp",
    "--cov-report=term-missing",
    "--cov-report=html",
]
asyncio_mode = "auto"

[dependency-groups]
dev = [
    "types-pyyaml>=6.0.12.20250822",
]
